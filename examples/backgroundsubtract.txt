[
    {
        "id": "adf53909.f65268",
        "type": "ocv-videoin",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "FPS": 25,
        "video": "1",
        "x": 300,
        "y": 60,
        "wires": [
            [
                "715fc118.9519a"
            ]
        ]
    },
    {
        "id": "dae8478f.9f1ac8",
        "type": "inject",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 40,
        "wires": [
            [
                "adf53909.f65268"
            ]
        ]
    },
    {
        "id": "138a17a6.bc8de8",
        "type": "inject",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 80,
        "wires": [
            [
                "adf53909.f65268"
            ]
        ]
    },
    {
        "id": "715fc118.9519a",
        "type": "ocv-resize",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "toprocess": "",
        "width": 640,
        "height": 480,
        "releaseinput": false,
        "releaseall": true,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "b46d0885.a25cb8"
            ]
        ]
    },
    {
        "id": "28e12c9f.5b66f4",
        "type": "function",
        "z": "b7d72580.9a0ea8",
        "name": "VideoWriter",
        "func": "node.name = 'videowriter';\nnode.toprocess = '';\nnode.releasemat = true;\nnode.releaseall = true;\nnode.writerframes = 200;\n\nnode.trigger = 'videowriter';\n\nif (msg.cmd){\n    switch(msg.cmd){\n        case 'reset':\n            if (context.writer){\n                context.writer.release();\n                delete context.writer;\n                node.warn(\"stopped videowriter by reset\");\n            }\n            break;\n    }\n    return;\n}\n\nvar cv = flow.get('cv');\n\nif (!cv){\n    node.error(\"no CV\");\n    return;\n}\n\nvar toprocess = node.toprocess;\n\nif ((toprocess === '') && (msg.payload.name)){\n    toprocess = msg.payload.name\n}\n\nif (toprocess === ''){\n    node.warn(\"no toprocess\");\n    return;\n}\n\n\nvar f = null;\n\nif (!msg.payload.frame){\n    node.warn(\"no frame\");\n    return;\n}\nif (!msg.payload.frame.data){\n    node.warn(\"no frame data\");\n    return;\n}\n\nif (msg.payload.frame.data[toprocess]){\n    var im = msg.payload.frame.data[toprocess];\n    if (msg.payload[node.trigger]){\n        switch (msg.payload[node.trigger]){\n            case 'start':\n            case 1:\n            case true:\n                // if already running, stop\n                if (context.writer){\n                    context.writer.release();\n                    delete context.writer;\n                }\n                context.writerframe = 0;\n                if (msg.filename){\n                    var filename = msg.filename;\n                    var FPS = 5;\n                    context.writer = new cv.VideoWriter(filename, 'DIVX', FPS, im.size(), true);    \n                    node.warn(\"started viderwriter\");\n                } else {\n                    node.warn(\"no filename\");\n                }\n                break;\n                \n            case 'stop':\n            case 0:\n            case false:\n                // if already running, stop\n                if (context.writer){\n                    context.writer.release();\n                    delete context.writer;\n                    node.warn(\"stopped viderwriter\");\n                }\n                break;\n        }\n    }\n    \n    f = msg.payload.frame;\n    \n    if (context.writer){\n        context.writer.writeSync(im);\n        context.writerframe++;\n        if (context.writerframe >= node.writerframes){\n            context.writer.release();\n            delete context.writer;\n            node.warn(\"stopped videowriter because frames \"+context.writerframe+\">\"+node.writerframes);\n        }\n    }\n\n    if (node.releasemat){\n        msg.payload.frame.data[toprocess].release();\n        delete msg.payload.frame.data[toprocess];\n    } \n}\n\nif (node.releaseall){\n    var f = msg.payload.frame;\n    var keys = Object.keys(f.data);\n    for (var i = keys.length-1; i >= 0; i--){\n        if (f.data[keys[i]].hasOwnProperty('release')){\n            f.data[keys[i]].release();\n        }\n        delete f.data[keys[i]];\n    }\n}\n\nreturn;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 420,
        "wires": [
            []
        ],
        "outputLabels": [
            "no output"
        ]
    },
    {
        "id": "39a249bd.8b2ae6",
        "type": "comment",
        "z": "b7d72580.9a0ea8",
        "name": "not tested",
        "info": "",
        "x": 180,
        "y": 380,
        "wires": []
    },
    {
        "id": "e9f2a68e.ba6d68",
        "type": "ocv-encode",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "toprocess": "backgroundsubtractor",
        "releaseinput": false,
        "releaseall": false,
        "x": 980,
        "y": 80,
        "wires": [
            [
                "b5d64e50.44c68",
                "5531939.4b4cd6c"
            ]
        ]
    },
    {
        "id": "b46d0885.a25cb8",
        "type": "ocv-bg",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "toprocess": "",
        "releaseinput": false,
        "releaseall": false,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "986fbab8.e91a38"
            ]
        ]
    },
    {
        "id": "323aa85a.20f7f8",
        "type": "multipart-encoder",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "statusCode": "",
        "ignoreMessages": true,
        "outputOneNew": false,
        "outputIfSingle": false,
        "outputIfAll": false,
        "globalHeaders": {
            "Content-Type": "multipart/x-mixed-replace;boundary=--myboundary",
            "Connection": "keep-alive",
            "Expires": "Fri, 01 Jan 1990 00:00:00 GMT",
            "Cache-Control": "no-cache, no-store, max-age=0, must-revalidate",
            "Pragma": "no-cache"
        },
        "partHeaders": {
            "Content-Type": "image/jpeg"
        },
        "destination": "all",
        "highWaterMark": 16384,
        "x": 1160,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a430a501.dad3f8",
        "type": "function",
        "z": "b7d72580.9a0ea8",
        "name": "move jpeg",
        "func": "node.api = global.get('ocv-api');\nnode.name = 'myname';\n\nvar data = node.api.getimage(node, msg);\n\nif (data){    \n    var newmsg = {\n        payload:data\n        };\n    return newmsg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 160,
        "wires": [
            [
                "323aa85a.20f7f8"
            ]
        ]
    },
    {
        "id": "6cabb7cd.0cf278",
        "type": "http in",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "url": "/first",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 980,
        "y": 200,
        "wires": [
            [
                "323aa85a.20f7f8"
            ]
        ]
    },
    {
        "id": "fb873e2b.7d1cd",
        "type": "inject",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "245f74e0.5aa3fc"
            ]
        ]
    },
    {
        "id": "245f74e0.5aa3fc",
        "type": "function",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "func": "var api = global.get('ocv-api');\nconsole.log(util.inspect(api));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "efa244a6.f8d008",
        "type": "function",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "func": "node.send(msg);\nnode.send([null, msg]);\n",
        "outputs": "2",
        "noerr": 0,
        "x": 810,
        "y": 100,
        "wires": [
            [
                "e9f2a68e.ba6d68"
            ],
            [
                "ae994fdf.ac3d6"
            ]
        ]
    },
    {
        "id": "ae994fdf.ac3d6",
        "type": "ocv-encode",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "toprocess": "draw",
        "releaseinput": true,
        "releaseall": true,
        "x": 980,
        "y": 260,
        "wires": [
            [
                "2c985cbc.02a9e4"
            ]
        ]
    },
    {
        "id": "ea12bd35.9cf5d",
        "type": "multipart-encoder",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "statusCode": "",
        "ignoreMessages": true,
        "outputOneNew": false,
        "outputIfSingle": false,
        "outputIfAll": false,
        "globalHeaders": {
            "Content-Type": "multipart/x-mixed-replace;boundary=--myboundary",
            "Connection": "keep-alive",
            "Expires": "Fri, 01 Jan 1990 00:00:00 GMT",
            "Cache-Control": "no-cache, no-store, max-age=0, must-revalidate",
            "Pragma": "no-cache"
        },
        "partHeaders": {
            "Content-Type": "image/jpeg"
        },
        "destination": "all",
        "highWaterMark": 16384,
        "x": 1160,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "69407b5a.7e9954",
        "type": "function",
        "z": "b7d72580.9a0ea8",
        "name": "move jpeg",
        "func": "node.api = global.get('ocv-api');\nnode.name = 'myname';\n\nvar data = node.api.getimage(node, msg);\n\nif (data){    \n    var newmsg = {\n        payload:data\n        };\n    return newmsg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 340,
        "wires": [
            [
                "ea12bd35.9cf5d"
            ]
        ]
    },
    {
        "id": "c4e72d8d.1e461",
        "type": "http in",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "url": "/second",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 990,
        "y": 380,
        "wires": [
            [
                "ea12bd35.9cf5d"
            ]
        ]
    },
    {
        "id": "986fbab8.e91a38",
        "type": "ocv-contours",
        "z": "b7d72580.9a0ea8",
        "name": "contours",
        "toprocess": "",
        "releaseinput": false,
        "releaseall": false,
        "x": 300,
        "y": 140,
        "wires": [
            [
                "d64cb42e.97f278"
            ]
        ]
    },
    {
        "id": "b5d64e50.44c68",
        "type": "debug",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1150,
        "y": 80,
        "wires": []
    },
    {
        "id": "d64cb42e.97f278",
        "type": "function",
        "z": "b7d72580.9a0ea8",
        "name": "sort contours by size, return 3 biggest as 'sort'",
        "func": "\nif (msg.cmd){\n    return msg ;\n}\n    \n\nnode.api = global.get('ocv-api');\nnode.name = 'sort';\n\nvar name = node.api.getimagename(node, msg);\nvar cnts = node.api.getimage(node, msg, name);\n\nif (!cnts)\n    return;\n\nvar numcnts = cnts.size();\n\nvar movementfound = false;\n//msg.camera = msg.out;\nif (numcnts){\n    var areas = [];\n    for (var c = 0; c < numcnts; c++){\n        var area = { area:cnts.area(c), index:c };\n        areas.push(area);\n    }\n    var fn = function(a, b){\n        return (b.area - a.area);\n    }\n    areas.sort(fn);\n}\n\nvar boxes = [];\n\nvar requiredarea = 100;\n\n// draw only the three biggest\nfor (var i = 0; ((i < 3) && (i < numcnts)); i++){\n    var c = areas[i].index;\n    //node.error(areas[i].index + ' '+areas[i].area);\n    if (areas[i].area > requiredarea){\n        var bounding = cnts.boundingRect(c);\n        boxes.push(bounding);\n        movementfound = true;\n    }\n}\n\nnode.api.releaseone( node, msg, name );\nnode.api.sendframe( node, boxes, msg );\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 180,
        "wires": [
            [
                "e76fdc28.ffac5"
            ]
        ]
    },
    {
        "id": "e76fdc28.ffac5",
        "type": "function",
        "z": "b7d72580.9a0ea8",
        "name": "draw",
        "func": "if (msg.cmd){\n    return msg ;\n}\n\nnode.api = global.get('ocv-api');\nnode.name = 'draw';\n\nvar boxesname = 'sort';\nvar imagename = 'resize';\n\nvar boxes = node.api.getimage(node, msg, boxesname);\nvar image = node.api.getimage(node, msg, imagename);\n\nvar scalex = 1;\nvar scaley = 1;\n\nfor ( var i = 0; i < boxes.length; i++){\n    var bounding = boxes[i];\n\n    // draw onto original camera image\n    image.rectangle([bounding.x*scalex, bounding.y*scaley], [bounding.width*scalex, bounding.height*scaley], [0, 0, 255], 2);\n}\n\nnode.api.releaseone( node, msg, boxesname );\n\nnode.api.sendframe( node, image, msg );\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 180,
        "wires": [
            [
                "efa244a6.f8d008"
            ]
        ]
    },
    {
        "id": "5531939.4b4cd6c",
        "type": "ocv-order",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "toprocess": "",
        "releaseinput": true,
        "releaseall": true,
        "x": 970,
        "y": 120,
        "wires": [
            [
                "a430a501.dad3f8"
            ]
        ]
    },
    {
        "id": "2c985cbc.02a9e4",
        "type": "ocv-order",
        "z": "b7d72580.9a0ea8",
        "name": "",
        "toprocess": "",
        "releaseinput": true,
        "releaseall": true,
        "x": 970,
        "y": 300,
        "wires": [
            [
                "69407b5a.7e9954"
            ]
        ]
    }
]